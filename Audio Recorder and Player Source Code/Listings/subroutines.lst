


ARM Macro Assembler    Page 1 


    1 00000000 400FE620 
                       RCGCI2C EQU              0x400FE620
    2 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608
    3 00000000 4000451C 
                       PORTA_DEN
                               EQU              0x4000451C
    4 00000000 40004510 
                       PORTA_PUR
                               EQU              0x40004510
    5 00000000 40004420 
                       PORTA_AFSEL
                               EQU              0x40004420
    6 00000000 4000452C 
                       PORTA_PCTL
                               EQU              0x4000452C
    7 00000000 4000450C 
                       PORTA_ODR
                               EQU              0x4000450C
    8 00000000         
    9 00000000 40021020 
                       I2C1_MCR
                               EQU              0x40021020
   10 00000000 4002100C 
                       I2C1_MTPR
                               EQU              0x4002100C
   11 00000000 40021000 
                       I2C1_MSA
                               EQU              0x40021000
   12 00000000 40021008 
                       I2C1_MDR
                               EQU              0x40021008
   13 00000000 40021004 
                       I2C1_MCS
                               EQU              0x40021004
   14 00000000         
   15 00000000 400FE604 
                       SYSCTL_RCGCTIMER
                               EQU              0x400FE604  ; GPTM Gate Control
                                                            
   16 00000000 40032000 
                       TIMER2_CFG
                               EQU              0x40032000
   17 00000000 40032004 
                       TIMER2_TAMR
                               EQU              0x40032004
   18 00000000 4003200C 
                       TIMER2_CTL
                               EQU              0x4003200C
   19 00000000 40032018 
                       TIMER2_IMR
                               EQU              0x40032018
   20 00000000 4003201C 
                       TIMER2_RIS
                               EQU              0x4003201C
   21 00000000 40032024 
                       TIMER2_ICR
                               EQU              0x40032024



ARM Macro Assembler    Page 2 


   22 00000000 40032028 
                       TIMER2_TAILR
                               EQU              0x40032028
   23 00000000 40032038 
                       TIMER2_TAPR
                               EQU              0x40032038
   24 00000000 40032048 
                       TIMER2_TAR
                               EQU              0x40032048
   25 00000000         
   26 00000000 400FE608 
                       SYSCTL_RCGCGPIO
                               EQU              0x400FE608
   27 00000000 40024420 
                       GPIO_PORTE_AFSEL
                               EQU              0x40024420
   28 00000000 40024400 
                       GPIO_PORTE_DIR
                               EQU              0x40024400
   29 00000000 40024528 
                       GPIO_PORTE_AMSEL
                               EQU              0x40024528
   30 00000000         
   31 00000000 40039000 
                       ADC1_ACTSS
                               EQU              0x40039000
   32 00000000 40039014 
                       ADC1_EMUX
                               EQU              0x40039014
   33 00000000 400390A4 
                       ADC1_SSCTL3
                               EQU              0x400390A4
   34 00000000 40039FC4 
                       ADC1_PC EQU              0x40039FC4
   35 00000000 40039008 
                       ADC1_IM EQU              0x40039008
   36 00000000 400390A0 
                       ADC1_SSMUX3
                               EQU              0x400390A0
   37 00000000 400FE638 
                       SYSCTL_RCGCADC
                               EQU              0x400FE638
   38 00000000         
   39 00000000 40039028 
                       ADC1_PSSI
                               EQU              0x40039028
   40 00000000 40039004 
                       ADC1_RIS
                               EQU              0x40039004
   41 00000000 400390A8 
                       ADC1_SSFIFO3
                               EQU              0x400390A8
   42 00000000 4003900C 
                       ADC1_ISC
                               EQU              0x4003900C
   43 00000000         
   44 00000000 E000E100 
                       NVIC_EN0
                               EQU              0xE000E100  ; IRQ 0 to 31 Set E



ARM Macro Assembler    Page 3 


                                                            nable Register
   45 00000000 E000E414 
                       NVIC_PRI5
                               EQU              0xE000E414  ; IRQ 20 to 23 Prio
                                                            rity Register
   46 00000000 E000E104 
                       NVIC_EN1
                               EQU              0xE000E104  ; IRQ 32 to 63 Set 
                                                            Enable Register
   47 00000000 E000E430 
                       NVIC_PRI12
                               EQU              0xE000E430  ; IRQ 48 to 51 Prio
                                                            rity Register
   48 00000000         
   49 00000000 20000402 
                       SRAM_ADDR
                               EQU              0x20000402  ;
   50 00000000 20007FFE 
                       SRAM_LIM
                               EQU              0x20007FFE  ;
   51 00000000         
   52 00000000 40021800 
                       I2C1_SOAR
                               EQU              0x40021800
   53 00000000 40021804 
                       I2C1_SCSR
                               EQU              0x40021804
   54 00000000         
   55 00000000         ;LABEL  DIRECTIVE VALUE  COMMENT
   56 00000000                 AREA             subroutines, READONLY, CODE
   57 00000000                 THUMB
   58 00000000                 EXPORT           initI2C     ; Make available
   59 00000000                 EXPORT           initTimer
   60 00000000                 EXPORT           initADC_F
   61 00000000                 EXPORT           Timer2A_H
   62 00000000         
   63 00000000         
   64 00000000         initI2C PROC
   65 00000000         
   66 00000000 488F            LDR              R0,=RCGCI2C
   67 00000002 6801            LDR              R1,[R0]
   68 00000004 F041 0102       ORR              R1,#0x2
   69 00000008 6001            STR              R1,[R0]     ; Module 1 will be 
                                                            used- Pins SCL: PA6
                                                            , SDA:PA7
   70 0000000A BF00            NOP
   71 0000000C BF00            NOP
   72 0000000E BF00            NOP
   73 00000010 BF00            NOP
   74 00000012         
   75 00000012         
   76 00000012 488C            LDR              R0,=RCGCGPIO
   77 00000014 6801            LDR              R1,[R0]
   78 00000016 F041 0101       ORR              R1,#0x1
   79 0000001A 6001            STR              R1,[R0]     ; PORT A is powered
                                                            
   80 0000001C BF00            NOP
   81 0000001E BF00            NOP
   82 00000020 BF00            NOP



ARM Macro Assembler    Page 4 


   83 00000022 BF00            NOP
   84 00000024         
   85 00000024 4888            LDR              R0,=PORTA_DEN
   86 00000026 6801            LDR              R1,[R0]
   87 00000028 F041 01C0       ORR              R1,#0xC0
   88 0000002C 6001            STR              R1,[R0]     ; PA6-PA7 are digit
                                                            al
   89 0000002E         
   90 0000002E 4887            LDR              R0,=PORTA_PUR
   91 00000030 6801            LDR              R1,[R0]
   92 00000032 F041 01C0       ORR              R1,#0xC0
   93 00000036 6001            STR              R1,[R0]     ; PA6-PA7 is pulled
                                                             up
   94 00000038         
   95 00000038         ; NOTE: Internal Pull up might be insufficient. If such 
                       case noticed
   96 00000038         ; go to I2C manuals and use appropriate pull-ups externa
                       lly
   97 00000038         ; Note2: I have also noticed that DAC module has pull-up
                        resistors on the board
   98 00000038         ; they might be enough since they will pull-up the whole
                        busses.
   99 00000038         
  100 00000038         
  101 00000038 4885            LDR              R0,=PORTA_AFSEL
  102 0000003A 6801            LDR              R1,[R0]
  103 0000003C F041 01C0       ORR              R1,#0xC0
  104 00000040 6001            STR              R1,[R0]     ; Alternate functio
                                                            n for PA6-7
  105 00000042         
  106 00000042 4884            LDR              R0,=PORTA_PCTL
  107 00000044 6801            LDR              R1,[R0]
  108 00000046 F04F 524C       LDR              R2,=0x33000000
  109 0000004A EA41 0102       ORR              R1,R2
  110 0000004E 6001            STR              R1,[R0]     ; Configured as SDA
                                                             and SCL
  111 00000050         
  112 00000050 4881            LDR              R0,=PORTA_ODR
  113 00000052 6801            LDR              R1,[R0]
  114 00000054 F041 0180       ORR              R1,#0x80
  115 00000058 6001            STR              R1,[R0]     ; SDA (PA7) is sele
                                                            cted as open drain 
                                                            pin
  116 0000005A         
  117 0000005A         
  118 0000005A 4880            LDR              R0,=I2C1_MCR
  119 0000005C F04F 0110       LDR              R1,=0x10    ;0x31;   -> Master 
                                                            and Slave enabled, 
                                                            loopback enabled ->
                                                             debug purposes
  120 00000060 6001            STR              R1,[R0]     ; Master mode enabl
                                                            ed, Loopback is dis
                                                            abled (it might be 
                                                            needed, for debuggi
                                                            ng without the spea
                                                            ker)
  121 00000062         
  122 00000062 487F            LDR              R0,=I2C1_MTPR
  123 00000064 F04F 0102       LDR              R1,=0x02



ARM Macro Assembler    Page 5 


  124 00000068 6001            STR              R1,[R0]     ; Fast Mode, Freque
                                                            ncy will be 333kbps
                                                            
  125 0000006A         
  126 0000006A 487E            LDR              R0,=I2C1_MSA
  127 0000006C F04F 01C4       LDR              R1,=0xC4    ; Address is 0x62 a
                                                            nd R/S is low (send
                                                            )
  128 00000070 6001            STR              R1,[R0]
  129 00000072         
  130 00000072         ;LDR R0,=I2C1_SOAR
  131 00000072         ;LDR R1,=0x63
  132 00000072         ;STR R1,[R0]
  133 00000072         
  134 00000072         ;LDR R0,=I2C1_SCSR
  135 00000072         ;MOV R1,#0x1
  136 00000072         ;STR R1,[R0]
  137 00000072 4770            BX               LR
  138 00000074                 ENDP
  139 00000074         
  140 00000074         
  141 00000074         ;///////////////////////////////////////////////////////
                       //////////////////////////////////
  142 00000074         ;///////////////////////////////////////////////////////
                       //////////////////////////////////
  143 00000074         
  144 00000074         initTimer
                               PROC
  145 00000074         
  146 00000074 487C            LDR              R0,=SYSCTL_RCGCTIMER
  147 00000076 6801            LDR              R1,[R0]
  148 00000078 F041 0104       ORR              R1,#0x04    ; Enable module 2
  149 0000007C 6001            STR              R1,[R0]
  150 0000007E BF00            NOP
  151 00000080 BF00            NOP
  152 00000082 BF00            NOP
  153 00000084         
  154 00000084 4879            LDR              R0,=TIMER2_CTL
  155 00000086 6801            LDR              R1,[R0]
  156 00000088 F021 0101       BIC              R1,#0x01    ; Disable during se
                                                            tup
  157 0000008C 6001            STR              R1,[R0]
  158 0000008E         
  159 0000008E 4878            LDR              R0,=TIMER2_CFG
  160 00000090 F04F 0104       MOV              R1,#0x04    ; 16 bit mode
  161 00000094 6001            STR              R1,[R0]
  162 00000096         
  163 00000096 4877            LDR              R0,=TIMER2_IMR
  164 00000098 6801            LDR              R1,[R0]
  165 0000009A F041 0101       ORR              R1,#0x1     ; Enable Time-out I
                                                            nterrupt
  166 0000009E 6001            STR              R1,[R0]
  167 000000A0         
  168 000000A0 4875            LDR              R0,=TIMER2_TAPR
  169 000000A2 F04F 010F       MOV              R1,#15      ; Assuming we got 2
                                                            0Mhz clock from RCC
                                                            
  170 000000A6 6001            STR              R1,[R0]     ; Timer period will
                                                             be 1us



ARM Macro Assembler    Page 6 


  171 000000A8         
  172 000000A8 4874            LDR              R0,=TIMER2_TAILR
  173 000000AA F04F 0128       MOV              R1,#40
  174 000000AE 6001            STR              R1,[R0]     ; Start with 8kHz
  175 000000B0         
  176 000000B0 4873            LDR              R0,=TIMER2_TAMR
  177 000000B2 F04F 0102       MOV              R1,#0x2     ; Periodic - Down
  178 000000B6 6001            STR              R1,[R0]
  179 000000B8         
  180 000000B8         ; Timer2A EN # 23
  181 000000B8         
  182 000000B8 4872            LDR              R0,=NVIC_EN0
  183 000000BA 6801            LDR              R1,[R0]
  184 000000BC F44F 0200       LDR              R2,=0x00800000
  185 000000C0 EA41 0102       ORR              R1,R2
  186 000000C4 6001            STR              R1,[R0]     ; Enable interrupt 
                                                            for Timer2A
  187 000000C6         
  188 000000C6         ;For Pri, #23 is controlled by 31:29 of PRI5
  189 000000C6         
  190 000000C6 4870            LDR              R0,=NVIC_PRI5
  191 000000C8 6801            LDR              R1,[R0]
  192 000000CA F04F 4280       LDR              R2,=0x40000000
  193 000000CE EA41 0102       ORR              R1,R2
  194 000000D2 6001            STR              R1,[R0]
  195 000000D4         
  196 000000D4 4865            LDR              R0,=TIMER2_CTL
  197 000000D6 6801            LDR              R1,[R0]
  198 000000D8 F041 0103       ORR              R1,#0x03    ; Enable, Halt in d
                                                            ebug
  199 000000DC 6001            STR              R1,[R0]
  200 000000DE         
  201 000000DE 4770            BX               LR
  202 000000E0                 ENDP
  203 000000E0         
  204 000000E0         
  205 000000E0         initADC_F
                               PROC
  206 000000E0         
  207 000000E0         ;***************GPIO INIT*************************
  208 000000E0         
  209 000000E0 4858            LDR              R0,=SYSCTL_RCGCGPIO
  210 000000E2 6801            LDR              R1,[R0]
  211 000000E4 F041 0110       ORR              R1,#0x10    ; Enable PortE
  212 000000E8 6001            STR              R1,[R0]
  213 000000EA BF00            NOP
  214 000000EC BF00            NOP
  215 000000EE BF00            NOP
  216 000000F0         
  217 000000F0 4866            LDR              R0,=GPIO_PORTE_AFSEL
  218 000000F2 F04F 0104       LDR              R1,=0x04    ; Enable AF for bit
                                                            2
  219 000000F6 6001            STR              R1,[R0]
  220 000000F8         
  221 000000F8 4865            LDR              R0,=GPIO_PORTE_DIR
  222 000000FA 6801            LDR              R1,[R0]
  223 000000FC F021 0104       BIC              R1,#0x04    ; Clear to make it 
                                                            input
  224 00000100 6001            STR              R1,[R0]



ARM Macro Assembler    Page 7 


  225 00000102         
  226 00000102 4864            LDR              R0,=GPIO_PORTE_AMSEL
  227 00000104 6801            LDR              R1,[R0]
  228 00000106 F041 0104       ORR              R1,#0x04
  229 0000010A 6001            STR              R1,[R0]
  230 0000010C         
  231 0000010C         ;*******************ADC INIT****************************
                       ***********
  232 0000010C         
  233 0000010C 4862            LDR              R0,=SYSCTL_RCGCADC
  234 0000010E 6801            LDR              R1,[R0]
  235 00000110 F041 0102       ORR              R1,#0x02    ; Enable ADC1
  236 00000114 6001            STR              R1,[R0]
  237 00000116 BF00            NOP
  238 00000118 BF00            NOP
  239 0000011A BF00            NOP
  240 0000011C BF00            NOP
  241 0000011E BF00            NOP
  242 00000120 BF00            NOP
  243 00000122 BF00            NOP
  244 00000124         
  245 00000124 485D            LDR              R0,=ADC1_ACTSS
  246 00000126 6801            LDR              R1,[R0]
  247 00000128 F021 0108       BIC              R1,#0x08    ; Clear bit3
  248 0000012C 6001            STR              R1,[R0]
  249 0000012E         
  250 0000012E 485C            LDR              R0,=ADC1_EMUX
  251 00000130 6801            LDR              R1,[R0]
  252 00000132 F36F 310F       BFC              R1,#12,#4   ; Clear bits 15:12 
                                                            to trigger by softw
                                                            are
  253 00000136 6001            STR              R1,[R0]
  254 00000138         
  255 00000138 485A            LDR              R0,=ADC1_SSMUX3
  256 0000013A 6801            LDR              R1,[R0]
  257 0000013C F041 0101       ORR              R1,#0x1
  258 00000140 6001            STR              R1,[R0]
  259 00000142         
  260 00000142 4859            LDR              R0,=ADC1_SSCTL3
  261 00000144 6801            LDR              R1,[R0]
  262 00000146 F041 0106       ORR              R1,#0x06    ; Set IE0 & END0
  263 0000014A 6001            STR              R1,[R0]
  264 0000014C         
  265 0000014C 4857            LDR              R0,=ADC1_PC
  266 0000014E 6801            LDR              R1,[R0]
  267 00000150 F041 0101       ORR              R1,#0x01    ; Choose 125 ksps
  268 00000154 6001            STR              R1,[R0]
  269 00000156         
  270 00000156         ; If you decide to use interrupt for ADC, you can uncomm
                       ent the following piece of code 
  271 00000156         ;LDR R0,=ADC1_IM
  272 00000156         ;LDR R1,[R0]
  273 00000156         ;ORR R1,#0x8
  274 00000156         ;STR R1,[R0]
  275 00000156         
  276 00000156         ;LDR R0,=NVIC_EN1
  277 00000156         ;LDR R1,[R0]
  278 00000156         ;LDR R2,=0x00080000
  279 00000156         ;ORR R1,R2



ARM Macro Assembler    Page 8 


  280 00000156         ;STR R1,[R0]; Enable bit 51
  281 00000156         
  282 00000156         ;LDR R0,=NVIC_PRI12
  283 00000156         ;LDR R1,[R0]
  284 00000156         ;LDR R2,=0x80000000
  285 00000156         ;ORR R1,R2
  286 00000156         ;STR R1,[R0]; Pri is 3
  287 00000156         
  288 00000156 4851            LDR              R0,=ADC1_ACTSS
  289 00000158 6801            LDR              R1,[R0]
  290 0000015A F041 0108       ORR              R1,#0x08    ; Set bit3
  291 0000015E 6001            STR              R1,[R0]
  292 00000160         
  293 00000160         
  294 00000160 4770            BX               LR
  295 00000162                 ENDP
  296 00000162         
  297 00000162         Timer2A_H
                               PROC
  298 00000162         
  299 00000162 4842            LDR              R0,=TIMER2_CTL
  300 00000164 6801            LDR              R1,[R0]
  301 00000166 F021 0101       BIC              R1,#0x01    ; Disable during in
                                                            terrupt
  302 0000016A 6001            STR              R1,[R0]
  303 0000016C         
  304 0000016C F1BB 0F00       CMP              R11,#0
  305 00000170 D106            BNE              clr
  306 00000172         ;sft, R11 = 0
  307 00000172 F838 3B01       LDRH             R3,[R8],#1
  308 00000176 F36F 330F       BFC              R3,#12,#4   ; Clear prev part
  309 0000017A F04F 0B01       MOV              R11,#1
  310 0000017E E005            B                jmpclr
  311 00000180         
  312 00000180         ;clr, R11 = 1
  313 00000180 F838 3B02 
                       clr     LDRH             R3,[R8],#2
  314 00000184 EA4F 1313       LSR              R3,#4
  315 00000188 F04F 0B00       MOV              R11,#0
  316 0000018C         
  317 0000018C 461C    jmpclr  MOV              R4,R3       ; R3 & R4 Contains 
                                                            the data that will 
                                                            be transmitted
  318 0000018E         
  319 0000018E         
  320 0000018E         ;LDR R0,=I2C1_MDR
  321 0000018E         ;MOV R1,#0xC0; = 1100.0000 (Device Addressing byte)
  322 0000018E         ;STR R1,[R0]
  323 0000018E         
  324 0000018E         ;; Note: A2,A1 are taken 00. They are 00 as default acco
                       rding to datasheet however they may be different
  325 0000018E         ;; as I've read from internet. A0 is also taken 0, there
                        should be an A0 bit on the board. However there is not.
                       
  326 0000018E         ;; So if does not work try A0 = 1 as well.
  327 0000018E         ;; --> Total Chaos
  328 0000018E         
  329 0000018E         ;LDR R0,=I2C1_MCS
  330 0000018E         ;MOV R1,#0x3



ARM Macro Assembler    Page 9 


  331 0000018E         ;STR R1,[R0]; Start,Run
  332 0000018E         
  333 0000018E         ;busy  LDR R1,[R0]; Read back the status bits
  334 0000018E         ;BIC R1,#0xFE; Clear all bits except Busy bit
  335 0000018E         ;CMP R1,#0x1
  336 0000018E         ;BEQ busy
  337 0000018E         
  338 0000018E         ;LDR R1,[R0]; Read back the status bits
  339 0000018E         ;BIC R1,#0xFD; Clear all bits except error bit
  340 0000018E         ;CMP R1,#0x02
  341 0000018E         ;BNE jump
  342 0000018E         ;err_loop B err_loop;B error_subroutine
  343 0000018E         
  344 0000018E         ;2nd Byte
  345 0000018E         
  346 0000018E EA4F 2313 
                       jump    LSR              R3,#8       ; keep MSB 4 bits
  347 00000192 4619            MOV              R1,R3
  348 00000194 4846            LDR              R0,=I2C1_MDR
  349 00000196         ;LDR R1,=0; Trial
  350 00000196 6001            STR              R1,[R0]
  351 00000198         
  352 00000198 4846            LDR              R0,=I2C1_MCS
  353 0000019A F04F 0103       MOV              R1,#0x3     ;#0x1
  354 0000019E 6001            STR              R1,[R0]     ; Start&Run
  355 000001A0         
  356 000001A0 6801    busy2   LDR              R1,[R0]     ; Read back the sta
                                                            tus bits
  357 000001A2 F021 01FE       BIC              R1,#0xFE    ; Clear all bits ex
                                                            cept Busy bit
  358 000001A6 2901            CMP              R1,#0x1
  359 000001A8 D0FA            BEQ              busy2
  360 000001AA         
  361 000001AA 6801            LDR              R1,[R0]     ; Read back the sta
                                                            tus bits
  362 000001AC F021 01FD       BIC              R1,#0xFD    ; Clear all bits ex
                                                            cept error bit
  363 000001B0 2902            CMP              R1,#0x02
  364 000001B2 D1FF            BNE              jump2
  365 000001B4         ;err_loop2 B err_loop2;B error_subroutine
  366 000001B4         
  367 000001B4         
  368 000001B4         ;3rd Byte
  369 000001B4         
  370 000001B4 F36F 240B 
                       jump2   BFC              R4,#8,#4    ; Keep LSB 8 bits
  371 000001B8 4621            MOV              R1,R4
  372 000001BA 483D            LDR              R0,=I2C1_MDR
  373 000001BC         ;LDR R1,=0x12; Trial
  374 000001BC 6001            STR              R1,[R0]
  375 000001BE         
  376 000001BE 483D            LDR              R0,=I2C1_MCS
  377 000001C0 F04F 0101       MOV              R1,#0x1
  378 000001C4 6001            STR              R1,[R0]     ; Run
  379 000001C6         
  380 000001C6 6801    busy3   LDR              R1,[R0]     ; Read back the sta
                                                            tus bits
  381 000001C8 F021 01FE       BIC              R1,#0xFE    ; Clear all bits ex
                                                            cept Busy bit



ARM Macro Assembler    Page 10 


  382 000001CC 2901            CMP              R1,#0x1
  383 000001CE D0FA            BEQ              busy3
  384 000001D0         
  385 000001D0 6801            LDR              R1,[R0]     ; Read back the sta
                                                            tus bits
  386 000001D2 F021 01FD       BIC              R1,#0xFD    ; Clear all bits ex
                                                            cept error bit
  387 000001D6 2902            CMP              R1,#0x02
  388 000001D8 D1FF            BNE              jump3
  389 000001DA         ;err_loop3 B err_loop3;B error_subroutine
  390 000001DA         
  391 000001DA         ; EOT Byte
  392 000001DA         
  393 000001DA 4836    jump3   LDR              R0,=I2C1_MCS
  394 000001DC F04F 0104       MOV              R1,#0x4
  395 000001E0 6001            STR              R1,[R0]     ; EOT
  396 000001E2         
  397 000001E2 6801    busy4   LDR              R1,[R0]     ; Read back the sta
                                                            tus bits
  398 000001E4 F021 01FE       BIC              R1,#0xFE    ; Clear all bits ex
                                                            cept Busy bit
  399 000001E8 2901            CMP              R1,#0x1
  400 000001EA D0FA            BEQ              busy4
  401 000001EC         
  402 000001EC 6801            LDR              R1,[R0]     ; Read back the sta
                                                            tus bits
  403 000001EE F021 01FD       BIC              R1,#0xFD    ; Clear all bits ex
                                                            cept error bit
  404 000001F2 2902            CMP              R1,#0x02
  405 000001F4         ;err_loop4 B err_loop4
  406 000001F4         
  407 000001F4         ; ADC to decide next timer period (Sound of frequency)
  408 000001F4         
  409 000001F4 4830    smpl    LDR              R0,=ADC1_PSSI
  410 000001F6 F04F 0108       MOV              R1,#0x08    ; bit 3 is set
  411 000001FA 6001            STR              R1,[R0]
  412 000001FC         
  413 000001FC 482F            LDR              R0,=ADC1_RIS
  414 000001FE 6801            LDR              R1,[R0]
  415 00000200 2908            CMP              R1,#0x08    ; Is sampling done?
                                                            
  416 00000202 D1F7            BNE              smpl
  417 00000204         
  418 00000204 482E            LDR              R0,=ADC1_SSFIFO3
  419 00000206 6802            LDR              R2,[R0]     ; R2 contains the s
                                                            ampled value
  420 00000208         
  421 00000208 482E            LDR              R0,=ADC1_ISC
  422 0000020A F04F 0108       MOV              R1,#0x08    ; Clear the flag to
                                                             continue with samp
                                                            ling
  423 0000020E 6001            STR              R1,[R0]
  424 00000210         
  425 00000210         ; Put Frequency Decider If Else code here
  426 00000210         
  427 00000210 481A            LDR              R0,=TIMER2_TAILR
  428 00000212 F04F 0128       MOV              R1,#40
  429 00000216 FBB2 F2F1       UDIV             R2,R1
  430 0000021A 2A05            CMP              R2,#5



ARM Macro Assembler    Page 11 


  431 0000021C BF38 2205       MOVLO            R2,#5
  432 00000220 6002            STR              R2,[R0]
  433 00000222         
  434 00000222 45C8            CMP              R8,R9
  435 00000224 D101            BNE              cont
  436 00000226 F8DF 80A0       LDR              R8,=SRAM_ADDR
  437 0000022A         
  438 0000022A         
  439 0000022A         
  440 0000022A 4828    cont    LDR              R0,=TIMER2_ICR
  441 0000022C 6801            LDR              R1,[R0]
  442 0000022E F041 0101       ORR              R1,#0x1
  443 00000232 6001            STR              R1,[R0]     ; Clear the flag of
                                                             Timer
  444 00000234         
  445 00000234 480D            LDR              R0,=TIMER2_CTL
  446 00000236 6801            LDR              R1,[R0]
  447 00000238 F041 0101       ORR              R1,#0x01    ; Enable again
  448 0000023C 6001            STR              R1,[R0]
  449 0000023E         
  450 0000023E 4770            BX               LR
  451 00000240                 ALIGN
  452 00000240                 ENDP
  453 00000240                 END
              400FE620 
              400FE608 
              4000451C 
              40004510 
              40004420 
              4000452C 
              4000450C 
              40021020 
              4002100C 
              40021000 
              400FE604 
              4003200C 
              40032000 
              40032018 
              40032038 
              40032028 
              40032004 
              E000E100 
              E000E414 
              40024420 
              40024400 
              40024528 
              400FE638 
              40039000 
              40039014 
              400390A0 
              400390A4 
              40039FC4 
              40021008 
              40021004 
              40039028 
              40039004 
              400390A8 
              4003900C 
              20000402 



ARM Macro Assembler    Page 12 


              40032024 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\subroutines.d -o.\objects\subroutines.o -I.\RTE\_Targ
et_1 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil
_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSIO
N SETA 524" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\subroutines.lst
 subroutines.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Timer2A_H 00000162

Symbol: Timer2A_H
   Definitions
      At line 297 in file subroutines.s
   Uses
      At line 61 in file subroutines.s
Comment: Timer2A_H used once
busy2 000001A0

Symbol: busy2
   Definitions
      At line 356 in file subroutines.s
   Uses
      At line 359 in file subroutines.s
Comment: busy2 used once
busy3 000001C6

Symbol: busy3
   Definitions
      At line 380 in file subroutines.s
   Uses
      At line 383 in file subroutines.s
Comment: busy3 used once
busy4 000001E2

Symbol: busy4
   Definitions
      At line 397 in file subroutines.s
   Uses
      At line 400 in file subroutines.s
Comment: busy4 used once
clr 00000180

Symbol: clr
   Definitions
      At line 313 in file subroutines.s
   Uses
      At line 305 in file subroutines.s
Comment: clr used once
cont 0000022A

Symbol: cont
   Definitions
      At line 440 in file subroutines.s
   Uses
      At line 435 in file subroutines.s
Comment: cont used once
initADC_F 000000E0

Symbol: initADC_F
   Definitions
      At line 205 in file subroutines.s
   Uses
      At line 60 in file subroutines.s
Comment: initADC_F used once
initI2C 00000000

Symbol: initI2C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 64 in file subroutines.s
   Uses
      At line 58 in file subroutines.s
Comment: initI2C used once
initTimer 00000074

Symbol: initTimer
   Definitions
      At line 144 in file subroutines.s
   Uses
      At line 59 in file subroutines.s
Comment: initTimer used once
jmpclr 0000018C

Symbol: jmpclr
   Definitions
      At line 317 in file subroutines.s
   Uses
      At line 310 in file subroutines.s
Comment: jmpclr used once
jump 0000018E

Symbol: jump
   Definitions
      At line 346 in file subroutines.s
   Uses
      None
Comment: jump unused
jump2 000001B4

Symbol: jump2
   Definitions
      At line 370 in file subroutines.s
   Uses
      At line 364 in file subroutines.s
Comment: jump2 used once
jump3 000001DA

Symbol: jump3
   Definitions
      At line 393 in file subroutines.s
   Uses
      At line 388 in file subroutines.s
Comment: jump3 used once
smpl 000001F4

Symbol: smpl
   Definitions
      At line 409 in file subroutines.s
   Uses
      At line 416 in file subroutines.s
Comment: smpl used once
subroutines 00000000

Symbol: subroutines
   Definitions
      At line 56 in file subroutines.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: subroutines unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC1_ACTSS 40039000

Symbol: ADC1_ACTSS
   Definitions
      At line 31 in file subroutines.s
   Uses
      At line 245 in file subroutines.s
      At line 288 in file subroutines.s

ADC1_EMUX 40039014

Symbol: ADC1_EMUX
   Definitions
      At line 32 in file subroutines.s
   Uses
      At line 250 in file subroutines.s
Comment: ADC1_EMUX used once
ADC1_IM 40039008

Symbol: ADC1_IM
   Definitions
      At line 35 in file subroutines.s
   Uses
      None
Comment: ADC1_IM unused
ADC1_ISC 4003900C

Symbol: ADC1_ISC
   Definitions
      At line 42 in file subroutines.s
   Uses
      At line 421 in file subroutines.s
Comment: ADC1_ISC used once
ADC1_PC 40039FC4

Symbol: ADC1_PC
   Definitions
      At line 34 in file subroutines.s
   Uses
      At line 265 in file subroutines.s
Comment: ADC1_PC used once
ADC1_PSSI 40039028

Symbol: ADC1_PSSI
   Definitions
      At line 39 in file subroutines.s
   Uses
      At line 409 in file subroutines.s
Comment: ADC1_PSSI used once
ADC1_RIS 40039004

Symbol: ADC1_RIS
   Definitions
      At line 40 in file subroutines.s
   Uses
      At line 413 in file subroutines.s
Comment: ADC1_RIS used once
ADC1_SSCTL3 400390A4




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: ADC1_SSCTL3
   Definitions
      At line 33 in file subroutines.s
   Uses
      At line 260 in file subroutines.s
Comment: ADC1_SSCTL3 used once
ADC1_SSFIFO3 400390A8

Symbol: ADC1_SSFIFO3
   Definitions
      At line 41 in file subroutines.s
   Uses
      At line 418 in file subroutines.s
Comment: ADC1_SSFIFO3 used once
ADC1_SSMUX3 400390A0

Symbol: ADC1_SSMUX3
   Definitions
      At line 36 in file subroutines.s
   Uses
      At line 255 in file subroutines.s
Comment: ADC1_SSMUX3 used once
GPIO_PORTE_AFSEL 40024420

Symbol: GPIO_PORTE_AFSEL
   Definitions
      At line 27 in file subroutines.s
   Uses
      At line 217 in file subroutines.s
Comment: GPIO_PORTE_AFSEL used once
GPIO_PORTE_AMSEL 40024528

Symbol: GPIO_PORTE_AMSEL
   Definitions
      At line 29 in file subroutines.s
   Uses
      At line 226 in file subroutines.s
Comment: GPIO_PORTE_AMSEL used once
GPIO_PORTE_DIR 40024400

Symbol: GPIO_PORTE_DIR
   Definitions
      At line 28 in file subroutines.s
   Uses
      At line 221 in file subroutines.s
Comment: GPIO_PORTE_DIR used once
I2C1_MCR 40021020

Symbol: I2C1_MCR
   Definitions
      At line 9 in file subroutines.s
   Uses
      At line 118 in file subroutines.s
Comment: I2C1_MCR used once
I2C1_MCS 40021004

Symbol: I2C1_MCS
   Definitions
      At line 13 in file subroutines.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 352 in file subroutines.s
      At line 376 in file subroutines.s
      At line 393 in file subroutines.s

I2C1_MDR 40021008

Symbol: I2C1_MDR
   Definitions
      At line 12 in file subroutines.s
   Uses
      At line 348 in file subroutines.s
      At line 372 in file subroutines.s

I2C1_MSA 40021000

Symbol: I2C1_MSA
   Definitions
      At line 11 in file subroutines.s
   Uses
      At line 126 in file subroutines.s
Comment: I2C1_MSA used once
I2C1_MTPR 4002100C

Symbol: I2C1_MTPR
   Definitions
      At line 10 in file subroutines.s
   Uses
      At line 122 in file subroutines.s
Comment: I2C1_MTPR used once
I2C1_SCSR 40021804

Symbol: I2C1_SCSR
   Definitions
      At line 53 in file subroutines.s
   Uses
      None
Comment: I2C1_SCSR unused
I2C1_SOAR 40021800

Symbol: I2C1_SOAR
   Definitions
      At line 52 in file subroutines.s
   Uses
      None
Comment: I2C1_SOAR unused
NVIC_EN0 E000E100

Symbol: NVIC_EN0
   Definitions
      At line 44 in file subroutines.s
   Uses
      At line 182 in file subroutines.s
Comment: NVIC_EN0 used once
NVIC_EN1 E000E104

Symbol: NVIC_EN1
   Definitions
      At line 46 in file subroutines.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: NVIC_EN1 unused
NVIC_PRI12 E000E430

Symbol: NVIC_PRI12
   Definitions
      At line 47 in file subroutines.s
   Uses
      None
Comment: NVIC_PRI12 unused
NVIC_PRI5 E000E414

Symbol: NVIC_PRI5
   Definitions
      At line 45 in file subroutines.s
   Uses
      At line 190 in file subroutines.s
Comment: NVIC_PRI5 used once
PORTA_AFSEL 40004420

Symbol: PORTA_AFSEL
   Definitions
      At line 5 in file subroutines.s
   Uses
      At line 101 in file subroutines.s
Comment: PORTA_AFSEL used once
PORTA_DEN 4000451C

Symbol: PORTA_DEN
   Definitions
      At line 3 in file subroutines.s
   Uses
      At line 85 in file subroutines.s
Comment: PORTA_DEN used once
PORTA_ODR 4000450C

Symbol: PORTA_ODR
   Definitions
      At line 7 in file subroutines.s
   Uses
      At line 112 in file subroutines.s
Comment: PORTA_ODR used once
PORTA_PCTL 4000452C

Symbol: PORTA_PCTL
   Definitions
      At line 6 in file subroutines.s
   Uses
      At line 106 in file subroutines.s
Comment: PORTA_PCTL used once
PORTA_PUR 40004510

Symbol: PORTA_PUR
   Definitions
      At line 4 in file subroutines.s
   Uses
      At line 90 in file subroutines.s
Comment: PORTA_PUR used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 2 in file subroutines.s
   Uses
      At line 76 in file subroutines.s
Comment: RCGCGPIO used once
RCGCI2C 400FE620

Symbol: RCGCI2C
   Definitions
      At line 1 in file subroutines.s
   Uses
      At line 66 in file subroutines.s
Comment: RCGCI2C used once
SRAM_ADDR 20000402

Symbol: SRAM_ADDR
   Definitions
      At line 49 in file subroutines.s
   Uses
      At line 436 in file subroutines.s
Comment: SRAM_ADDR used once
SRAM_LIM 20007FFE

Symbol: SRAM_LIM
   Definitions
      At line 50 in file subroutines.s
   Uses
      None
Comment: SRAM_LIM unused
SYSCTL_RCGCADC 400FE638

Symbol: SYSCTL_RCGCADC
   Definitions
      At line 37 in file subroutines.s
   Uses
      At line 233 in file subroutines.s
Comment: SYSCTL_RCGCADC used once
SYSCTL_RCGCGPIO 400FE608

Symbol: SYSCTL_RCGCGPIO
   Definitions
      At line 26 in file subroutines.s
   Uses
      At line 209 in file subroutines.s
Comment: SYSCTL_RCGCGPIO used once
SYSCTL_RCGCTIMER 400FE604

Symbol: SYSCTL_RCGCTIMER
   Definitions
      At line 15 in file subroutines.s
   Uses
      At line 146 in file subroutines.s
Comment: SYSCTL_RCGCTIMER used once
TIMER2_CFG 40032000

Symbol: TIMER2_CFG



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 16 in file subroutines.s
   Uses
      At line 159 in file subroutines.s
Comment: TIMER2_CFG used once
TIMER2_CTL 4003200C

Symbol: TIMER2_CTL
   Definitions
      At line 18 in file subroutines.s
   Uses
      At line 154 in file subroutines.s
      At line 196 in file subroutines.s
      At line 299 in file subroutines.s
      At line 445 in file subroutines.s

TIMER2_ICR 40032024

Symbol: TIMER2_ICR
   Definitions
      At line 21 in file subroutines.s
   Uses
      At line 440 in file subroutines.s
Comment: TIMER2_ICR used once
TIMER2_IMR 40032018

Symbol: TIMER2_IMR
   Definitions
      At line 19 in file subroutines.s
   Uses
      At line 163 in file subroutines.s
Comment: TIMER2_IMR used once
TIMER2_RIS 4003201C

Symbol: TIMER2_RIS
   Definitions
      At line 20 in file subroutines.s
   Uses
      None
Comment: TIMER2_RIS unused
TIMER2_TAILR 40032028

Symbol: TIMER2_TAILR
   Definitions
      At line 22 in file subroutines.s
   Uses
      At line 172 in file subroutines.s
      At line 427 in file subroutines.s

TIMER2_TAMR 40032004

Symbol: TIMER2_TAMR
   Definitions
      At line 17 in file subroutines.s
   Uses
      At line 176 in file subroutines.s
Comment: TIMER2_TAMR used once
TIMER2_TAPR 40032038




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: TIMER2_TAPR
   Definitions
      At line 23 in file subroutines.s
   Uses
      At line 168 in file subroutines.s
Comment: TIMER2_TAPR used once
TIMER2_TAR 40032048

Symbol: TIMER2_TAR
   Definitions
      At line 24 in file subroutines.s
   Uses
      None
Comment: TIMER2_TAR unused
45 symbols
396 symbols in table
